// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init



generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model SystemLog {
  id          Int      @id @default(autoincrement())
  user        User?    @relation(fields: [userId], references: [user_id])
  userId      Int?     
  ipAddress   String
  device      String
  action      String
  method      String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}


model User {
  user_id     Int       @id @default(autoincrement())
  fullName   String
  username   String    @unique
  birthDate  DateTime
  email      String    @unique
  password   String
  gender    Gender?
  journals   Journal[]
  quoteLogs  QuoteLog[]
  logins     SystemLog[]
  role       Role    @default(user) 
  verifiedAt DateTime?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}


model Journal {
  journal_id   Int       @id @default(autoincrement())
  user       User      @relation(fields: [userId], references: [user_id])
  userId     Int
  title      String?
  content    String
  mood       Mood
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Quote {
  quote_id    Int         @id @default(autoincrement())
  category    QuoteCategory
  text        String
  author      String?
  clickCount  Int          @default(0)
  quoteLogs   QuoteLog[]
  createdAt   DateTime     @default(now())
}

model QuoteLog {
  quote_log_id Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [user_id])
  userId     Int
  quote      Quote    @relation(fields: [quoteId], references: [quote_id])
  quoteId    Int
  action     QuoteAction
  createdAt  DateTime @default(now())
}

enum Gender {
  male
  female
}


enum Role {
  admin
  user
}

enum Mood {
  happy
  sad
  neutral
  angry
  motivated
}

enum QuoteCategory {
  sad
  happy
  motivation
}

enum QuoteAction {
  click
  like
}






